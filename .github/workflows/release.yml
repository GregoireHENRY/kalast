name: Build and upload release

on:
  push:
    tags:        
      - '**' 

jobs:
  release-ubuntu:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable

    - name: Cache Rust dependencies
      uses: actions/cache@v3
      with:
        path: target
        key: ${{ runner.os }}-build-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-build-

    - name: Set environment
      run: |
        if [ ${{ matrix.os }} == "ubuntu-latest" ]; then
          echo "PLATFORM=ubuntu" >> "$GITHUB_ENV"
          echo "EXT=" >> "$GITHUB_ENV"
        elif [ ${{ matrix.os }} == "macos-latest" ]; then
          echo "EXT=" >> "$GITHUB_ENV"
        elif [ ${{ matrix.os }} == "windows-latest" ]; then
          echo "PLATFORM=windows" >> "$GITHUB_ENV"
          echo "EXT=.exe" >> "$GITHUB_ENV"
        fi
      shell: bash
          
    - name: Get SDL2
      run: |
        if [ ${{ matrix.os }} == "ubuntu-latest" ]; then
          sudo apt install -y libsdl2-dev
        elif [ ${{ matrix.os }} == "macos-latest" ]; then
          brew install SDL2
        elif [ ${{ matrix.os }} == "windows-latest" ]; then
          cp include/win/SDL2.dll .
          cp include/win/SDL2.lib .
        fi
      shell: bash
      
    - name: Build
      run: |
        echo "Build main executable."
        cargo build -r --all-features && strip target/release/kalast
        echo "Build custom executable for specific example." 
        cargo build -r --all-features --example viewer-picker && strip target/release/examples/viewer-picker
      shell: bash
      
    - name: Bundle
      run: |
        mkdir -p bundle
        cp -r examples bundle
        cp target/release/kalast$EXT bundle
        cp target/release/examples/viewer-picker$EXT bundle/examples/viewer-picker
        cp include/kalast.ico bundle
        cp assets/kalast-vbanner.bmp bundle/vbanner-intro.bmp
        cp preferences.yaml bundle
        cp README.md bundle
        
        if [ ${{ matrix.os }} == "windows-latest" ]; then
          cp include/win/SDL2.dll bundle
          cp include/win/SDL2.lib bundle
        fi

        cd bundle
        cp -r examples/viewer/cfg .

        cd ..
        mv bundle kalast-$GITHUB_REF_NAME-$PLATFORM
        tar cvzf kalast-$GITHUB_REF_NAME-$PLATFORM.tar.gz kalast-$GITHUB_REF_NAME-$PLATFORM
      shell: bash

    - uses: softprops/action-gh-release@v1
      with:
        files: kalast-${{ github.ref_name }}-ubuntu.tar.gz 
        prerelease: true

  release-windows:
    runs-on: windows-latest
    steps:
    - name: Make bundle
      run: |
        mkdir -p bundle/content
        cp -r examples bundle/content
        cp target/release/kalast.exe bundle/content
        cp target/release/examples/viewer-picker.exe bundle/content/examples/viewer-picker
        cp include/win/SDL2.dll bundle/content
        cp include/win/SDL2.lib bundle/content
        cp include/kalast.ico bundle/content
        cp preferences.yaml bundle/content
        cp README.md bundle/content
        cp assets/kalast-vbanner.bmp bundle/vbanner-intro.bmp

        cd bundle/content
        cp -r examples/thermal/cfg .
      
    - name: Compile installer with Inno
      run: |
        cp compile/win/installer.iss bundle
        cd bundle
        iscc ./installer.iss /DVERSION=${{ github.ref_name }}

    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        files: bundle/setup-kalast-${{ github.ref_name }}.exe
        prerelease: true
          
  release-macos:
    runs-on: macos-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Cache Rust dependencies
      uses: actions/cache@v3
      with:
        path: target
        key: ${{ runner.OS }}-build-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.OS }}-build-

    - name: Install stable toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Install SDL2
      run: brew install SDL2

    - name: Set environment variables
      run: ./compile/macos-x86_64/set_env.sh

    - name: Build kalast
      run: ./compile/generic/build_kalast.sh

    - name: Make bundle
      run: ./compile/generic/make_bundle.sh

    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        files: kalast-${{ github.ref_name }}-macos-x86_64.tar.gz
        prerelease: true

  release-self-hosted-macos-M1:
    runs-on: gregoireh-1_macos-arm64-M1
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set environment variables
      run: ./compile/macos-arm64/set_env.sh

    - name: Build kalast
      run: ./compile/generic/build_kalast.sh

    - name: Make bundle
      run: ./compile/generic/make_bundle.sh

    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        files: kalast-${{ github.ref_name }}-macos-arm64.tar.gz
        prerelease: true